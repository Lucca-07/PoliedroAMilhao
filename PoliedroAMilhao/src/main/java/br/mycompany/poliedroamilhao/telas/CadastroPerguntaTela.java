
package br.mycompany.poliedroamilhao.telas;

import br.mycompany.poliedroamilhao.modelo.Materia;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import br.mycompany.poliedroamilhao.persistencia.MateriaDAO;
import br.mycompany.poliedroamilhao.telas.TelaPerguntaProfessor;
import java.lang.String;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

public class CadastroPerguntaTela extends javax.swing.JInternalFrame {
    private Map<String, Materia> mapaMaterias = new HashMap<>();
    private MateriaDAO materiaDAO = new MateriaDAO();
    private String dificuldade;
    private List<Materia> listaMaterias;
    ErroMateriasTela emt = new ErroMateriasTela();
    private final InicioTela inicioTela;
    
    public CadastroPerguntaTela(InicioTela inicioTela) {
    this.inicioTela = inicioTela;
    initComponents();
    ((BasicInternalFrameUI) this.getUI()).setNorthPane(null); 
    pack();
    
    try {
        carregarMateriasNoCombo();
        carregarDificuldades();
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar dados: " + ex.getMessage());
    }
}

    private TelaPerguntaProfessor ppt;


    
    public void carregarMateriasNoCombo() throws Exception {
    listaMaterias = materiaDAO.listarMaterias(); 
    jcMaterias.removeAllItems();
    mapaMaterias.clear();
    for (Materia materia : materiaDAO.listarMaterias()) {
    jcMaterias.addItem(materia.getNome());
    mapaMaterias.put(materia.getNome(), materia); 
}
    }
    
    public Materia getMateriaSelecionada() {
    String nomeSelecionado = (String) jcMaterias.getSelectedItem();

    if (nomeSelecionado == null || listaMaterias == null) return null;

    for (Materia m : listaMaterias) {
        if (nomeSelecionado.equals(m.getNome())) {
            return m;
        }
    }

    return null;
    }
    
     private void carregarDificuldades() {
        jcDificuldade.removeAllItems();
        jcDificuldade.addItem("Fácil");
        jcDificuldade.addItem("Média");
        jcDificuldade.addItem("Difícil");
    }
    

    public static void centralizarInternalFrame(JInternalFrame internalFrame, JDesktopPane desktopPane) {
        int width = desktopPane.getWidth();
        int height = desktopPane.getHeight();
        int internalWidth = internalFrame.getWidth();
        int internalHeight = internalFrame.getHeight();

        internalFrame.setLocation(
                (width - internalWidth) / 2,
                (height - internalHeight) / 2
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jcMaterias = new javax.swing.JComboBox<>();
        btConfirmar = new javax.swing.JButton();
        jcDificuldade = new javax.swing.JComboBox<>();
        voltarButton = new javax.swing.JButton();

        setBackground(null);
        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(163, 236, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jcMaterias.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jcMaterias.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jcMaterias.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jcMaterias.setFocusable(false);
        jcMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMateriasActionPerformed(evt);
            }
        });

        btConfirmar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btConfirmar.setText("Confirmar");
        btConfirmar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btConfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btConfirmar.setFocusable(false);
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmarActionPerformed(evt);
            }
        });

        jcDificuldade.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jcDificuldade.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jcDificuldade.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jcDificuldade.setFocusable(false);
        jcDificuldade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcDificuldadeActionPerformed(evt);
            }
        });

        voltarButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        voltarButton.setText("Voltar");
        voltarButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        voltarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        voltarButton.setFocusable(false);
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcDificuldade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(voltarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(voltarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcDificuldade, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMateriasActionPerformed
       String nomeSelecionado = (String) jcMaterias.getSelectedItem();

    if (nomeSelecionado != null && listaMaterias != null) {
        for (Materia m : listaMaterias) {
            if (nomeSelecionado.equals(m.getNome())) {
                System.out.println("Matéria selecionada: " + m.getNome());
                System.out.println("ID da matéria: " + m.getId());
                break;
    }                                          

        }   
    }
    }//GEN-LAST:event_jcMateriasActionPerformed

    private void btConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmarActionPerformed
        // TODO add your handling code here:
        JDesktopPane jDesktopPane1 = inicioTela.getDesktop();
        if (!jcMaterias.getSelectedItem().toString().equals("Selecione a matéria:") && !jcDificuldade.getSelectedItem().toString().equals("Selecione a dificuldade:")) { 
        } else {
            inicioTela.adicionarNoDesktop(emt);
            if (!emt.isVisible()) {
                emt.setVisible(true);
                emt.centralizarInternalFrame(emt, jDesktopPane1);
                this.setVisible(false);
            }
        }
        
         String materiaSelecionada = (String) jcMaterias.getSelectedItem();
    String dificuldadeSelecionada = (String) jcDificuldade.getSelectedItem();

    if (materiaSelecionada != null && dificuldadeSelecionada != null && !dificuldadeSelecionada.isEmpty()) {
        Materia materia = mapaMaterias.get(materiaSelecionada);

        if (materia != null) {
            // Cria a tela passando a matéria e dificuldade
            ppt = new TelaPerguntaProfessor(materia, dificuldadeSelecionada);

            // Adiciona a tela ao desktop do início
            inicioTela.adicionarNoDesktop(ppt);

            // Exibe a nova tela
            ppt.setVisible(true);

            // Fecha a tela atual
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Matéria selecionada inválida.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecione uma matéria e uma dificuldade válidas.");
    }

    }//GEN-LAST:event_btConfirmarActionPerformed

    private void jcDificuldadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcDificuldadeActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jcDificuldadeActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_voltarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConfirmar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jcDificuldade;
    private javax.swing.JComboBox<String> jcMaterias;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables
}
